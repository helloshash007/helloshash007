stage('Fetch Ansible Tower Job Logs') {
    steps {
        withCredentials([usernamePassword(credentialsId: 'ansible_tower_credentials', 
                                          usernameVariable: 'TOWER_USERNAME', 
                                          passwordVariable: 'TOWER_PASSWORD')]) {
            script {
                echo "Fetching logs for Ansible Tower Job ID: ${env.ANSIBLE_JOB_ID}"

                def response = sh(
                    script: '''
                    curl -sk -u "$TOWER_USERNAME:$TOWER_PASSWORD" \
                    -H "Content-Type: application/json" \
                    $TOWER_URL/jobs/$ANSIBLE_JOB_ID/stdout/?format=json \
                    -w "%{http_code}" \
                    -o ansible_tower_logs.json
                    ''',
                    returnStdout: true
                ).trim()

                def responseCode = response[-3..-1]
                echo "Debug: Fetch Logs Response Code: ${responseCode}"

                if (responseCode != "200") {
                    echo "Debug: Logs File Content:"
                    sh "cat ansible_tower_logs.json || true"
                    error "Failed to fetch logs for Job ID: ${env.ANSIBLE_JOB_ID}. HTTP Status: ${responseCode}"
                }

                def responseContent = readFile('ansible_tower_logs.json')

                if (responseContent.trim().startsWith("<")) {
                    echo "HTML logs detected. Content:"
                    echo responseContent
                } else {
                    def logsJson = readJSON text: responseContent
                    logsJson.each { phase ->
                        echo "Phase: ${phase.event_display ?: 'N/A'} - Output: ${phase.stdout ?: 'No output'}"
                    }
                }
            }
        }
    }
}