DO $$
DECLARE
    r RECORD;
    result RECORD;
BEGIN
    FOR r IN
        SELECT table_schema, table_name
        FROM information_schema.columns
        WHERE column_name = 'uid'
          AND table_name = 'user'
          AND table_schema NOT IN ('information_schema', 'pg_catalog')
    LOOP
        RAISE NOTICE 'Fetching from %.%', r.table_schema, r.table_name;
        FOR result IN EXECUTE format('SELECT uid FROM %I.%I', r.table_schema, r.table_name)
        LOOP
            RAISE NOTICE 'uid: %', result.uid;
        END LOOP;
    END LOOP;
END
$$;




SELECT 
    table_schema, 
    table_name,
    CASE 
        WHEN COUNT(*) = COUNT(DISTINCT uid) THEN 'Unique'
        ELSE 'Not Unique'
    END AS uid_uniqueness
FROM 
    information_schema.columns c
JOIN 
    information_schema.tables t 
    ON c.table_schema = t.table_schema 
    AND c.table_name = t.table_name
WHERE 
    c.column_name = 'uid'
    AND t.table_type = 'BASE TABLE'
    AND c.table_schema NOT IN ('information_schema', 'pg_catalog')
GROUP BY 
    table_schema, table_name
ORDER BY 
    table_schema, table_name;




COPY (
    SELECT table_schema || '.' || table_name AS table_full_name, uid
    FROM (
        SELECT table_schema, table_name, 
               format('SELECT uid FROM %I.%I', table_schema, table_name) AS sql_stmt
        FROM information_schema.columns
        WHERE column_name = 'uid'
          AND table_name = 'user'
          AND table_schema NOT IN ('information_schema', 'pg_catalog')
    ) sub
    CROSS JOIN LATERAL
        (EXECUTE sub.sql_stmt) AS t(uid)
) TO '/path/to/output.csv' WITH CSV HEADER;


DO $$
DECLARE
    sqls TEXT;
BEGIN
    SELECT string_agg(
        'SELECT ''' || table_schema || '.' || table_name || ''' AS source_table, uid FROM "' || table_schema || '"."' || table_name || '"',
        ' UNION ALL '
    ) INTO sqls
    FROM information_schema.columns
    WHERE column_name = 'uid'
      AND table_name = 'user'
      AND table_schema NOT IN ('information_schema', 'pg_catalog');

    EXECUTE format('COPY (%s) TO ''/tmp/uid_output.csv'' WITH CSV HEADER', sqls);
END
$$;