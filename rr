pipeline {
    agent any

    environment {
        TOWER_URL = 'https://ansible-tower.example.com/api/v2'
        TOWER_USERNAME = credentials('ansible_tower_username') // Tower username in Jenkins credentials
        TOWER_PASSWORD = credentials('ansible_tower_password') // Tower password in Jenkins credentials
    }

    stages {
        stage('Trigger Ansible Tower Job') {
            steps {
                script {
                    echo "Triggering Ansible Tower Job Template"

                    // Trigger the job template and store the HTTP response
                    def responseCode = sh(
                        script: """
                        curl -sk -X POST -u ${TOWER_USERNAME}:${TOWER_PASSWORD} \
                        -H "Content-Type: application/json" \
                        -d '{ "extra_vars": {} }' \
                        -w "%{http_code}" \
                        ${TOWER_URL}/job_templates/YOUR_TEMPLATE_ID/launch/ \
                        -o response.json
                        """,
                        returnStdout: true
                    ).trim()

                    if (responseCode != "201") {
                        error "Failed to trigger the Ansible Tower job. HTTP Status: ${responseCode}"
                    }

                    // Parse the response to extract Job ID
                    def jsonResponse = readJSON file: 'response.json'
                    def jobId = jsonResponse.id

                    if (!jobId) {
                        error "Failed to retrieve Job ID from Ansible Tower response!"
                    }

                    echo "Triggered Job ID: ${jobId}"

                    // Store Job ID for the next stage
                    env.ANSIBLE_JOB_ID = jobId
                }
            }
        }

        stage('Fetch Ansible Tower Job Output') {
            steps {
                script {
                    echo "Fetching logs for Ansible Tower Job ID: ${env.ANSIBLE_JOB_ID}"

                    // Fetch logs using the Job ID
                    def responseCode = sh(
                        script: """
                        curl -sk -u ${TOWER_USERNAME}:${TOWER_PASSWORD} \
                        -H "Content-Type: application/json" \
                        ${TOWER_URL}/jobs/${env.ANSIBLE_JOB_ID}/stdout/ \
                        -o ansible_tower_logs.txt \
                        -w "%{http_code}"
                        """,
                        returnStdout: true
                    ).trim()

                    if (responseCode != "200") {
                        error "Failed to fetch logs for Job ID: ${env.ANSIBLE_JOB_ID}. HTTP Status: ${responseCode}"
                    }

                    echo "Logs retrieved and saved to ansible_tower_logs.txt"

                    // Optionally display logs in Jenkins console
                    sh "cat ansible_tower_logs.txt"
                }
            }
        }
    }
}